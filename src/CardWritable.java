import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

import org.apache.hadoop.io.WritableComparable;

public class CardWritable implements WritableComparable<CardWritable> {
	Suit suit;
	int cardNumber;

	static int i = 0;

	/**
	 * Empty constructor - required for serialization.
	 */
	public CardWritable() {

	}

	/**
	 * Constructor
	 */
	public CardWritable(Suit suit, int cardNumber) {
		this.suit = suit;
		this.cardNumber = cardNumber;
	}

	/**
	 * Serializes the fields of this object to out.
	 */
	public void write(DataOutput out) throws IOException {
		out.writeInt(suit.ordinal());
		out.writeInt(cardNumber);
	}

	/**
	 * Deserializes the fields of this object from in.
	 */
	public void readFields(DataInput in) throws IOException {
		suit = Suit.values()[in.readInt()];
		cardNumber = (short) in.readInt();
	}

	/**
	 * Compares this object to another CardWritable object by comparing the suits and card numbers.
	 */
	public int compareTo(CardWritable other) {
		int ret = compareSuits(this, other);

		if (ret == 0) {
			// Compare the card numbers if the suits don't match
			if (this.cardNumber != other.cardNumber) {
				ret = (this.cardNumber < other.cardNumber ? -1 : 1);
			}
		}

		return ret;
	}

	/**
	 * Compares cw1 to another cw2 by comparing the suits.
	 */
	public static int compareSuits(CardWritable cw1, CardWritable cw2) {
		int ret = 0;

		// Compare the suits
		if (cw1.suit != cw2.suit) {
			ret = (cw1.suit.ordinal() < cw2.suit.ordinal() ? -1 : 1);
		}

		return ret;
	}

	/**
	 * A custom method that returns the two strings in the CardWritable object inside parentheses and separated by a
	 * comma. For example: "(suit,cardnumber)".
	 */
	public String toString() {
		return "(" + suit.name() + "," + cardNumber + ")";
	}

	/**
	 * The equals method compares two CardWritable objects for equality. The equals and hashCode methods have been
	 * automatically generated by Eclipse by right-clicking on an empty line, selecting Source, and then selecting the
	 * Generate hashCode() and equals() option.
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CardWritable other = (CardWritable) obj;
		if (suit == null) {
			if (other.suit != null)
				return false;
		} else if (!suit.equals(other.suit)) {
			return false;
		} else if (cardNumber != other.cardNumber)
			return false;
		return true;
	}

	/**
	 * The hashCode method generates a hash code for a CardWritable object. The equals and hashCode methods have been
	 * automatically generated by Eclipse by right-clicking on an empty line, selecting Source, and then selecting the
	 * Generate hashCode() and equals() option.
	 */
	@Override
	public int hashCode() {
		return suit.ordinal();
	}
}
